---
# Source: jaeger/templates/collector-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-collector
  labels:
    helm.sh/chart: jaeger-1.0.2
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/version: "1.53.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/component: collector
  template:
    metadata:
      annotations:
        checksum/config-env: 75a11da44c802486bc6f65640aa48a730f0f684c5c07a42ba3cd1735eb3fb070
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/component: collector
    spec:
      securityContext: {}
      serviceAccountName: jaeger-collector
      containers:
        - name: jaeger-collector
          securityContext: {}
          image: docker.io/jaegertracing/jaeger-collector:1.53.0
          imagePullPolicy: IfNotPresent
          args:
          env:
            - name: SPAN_STORAGE_TYPE
              value: cassandra
            - name: CASSANDRA_SERVERS
              value: jaeger-cassandra
            - name: CASSANDRA_PORT
              value: "9042"
            - name: CASSANDRA_KEYSPACE
              value: jaeger_v1_test
            - name: CASSANDRA_USERNAME
              value: user
            - name: CASSANDRA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jaeger-cassandra
                  key: password
          ports:
            - containerPort: 14250
              name: grpc
              protocol: TCP
            - containerPort: 14268
              name: http
              protocol: TCP
            - containerPort: 14269
              name: admin
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: admin
          livenessProbe:
            httpGet:
              path: /
              port: admin
          resources: {}
          volumeMounts:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
