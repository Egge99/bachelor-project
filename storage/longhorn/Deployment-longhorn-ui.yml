---
# Source: longhorn/templates/deployment-ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: longhorn
    helm.sh/chart: longhorn-1.6.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: longhorn
    app.kubernetes.io/version: v1.6.0
    app: longhorn-ui
  name: longhorn-ui
  namespace: longhorn-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: longhorn-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: longhorn
        helm.sh/chart: longhorn-1.6.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/version: v1.6.0
        app: longhorn-ui
    spec:
      serviceAccountName: longhorn-ui-service-account
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - longhorn-ui
                topologyKey: kubernetes.io/hostname
      containers:
        - name: longhorn-ui
          image: docker.io/longhornio/longhorn-ui:v1.6.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx/
            - name: nginx-config
              mountPath: /var/config/nginx/
            - name: var-run
              mountPath: /var/run/
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: LONGHORN_MANAGER_IP
              value: "http://longhorn-backend:9500"
            - name: LONGHORN_UI_PORT
              value: "8000"
      volumes:
        - emptyDir: {}
          name: nginx-cache
        - emptyDir: {}
          name: nginx-config
        - emptyDir: {}
          name: var-run
      priorityClassName: "longhorn-critical"
# Source: longhorn/templates/validate-psp-install.yaml
#
