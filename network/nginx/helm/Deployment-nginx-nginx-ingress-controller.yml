---
# Source: nginx-ingress/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-nginx-ingress-controller
  namespace: nginx
  labels:
    helm.sh/chart: nginx-ingress-1.1.3
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/version: "3.4.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-ingress
      app.kubernetes.io/instance: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-ingress
        app.kubernetes.io/instance: nginx
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"
        prometheus.io/scheme: "http"
    spec:
      serviceAccountName: nginx-nginx-ingress
      automountServiceAccountToken: true
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      hostNetwork: false
      dnsPolicy: ClusterFirst
      containers:
        - image: nginx/nginx-ingress:3.4.3
          name: nginx-ingress
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: prometheus
              containerPort: 9113
            - name: readiness-port
              containerPort: 8081
          readinessProbe:
            httpGet:
              path: /nginx-ready
              port: readiness-port
            periodSeconds: 1
            initialDelaySeconds: 0
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsUser: 101 #nginx
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          args:
            - -nginx-plus=false
            - -nginx-reload-timeout=60000
            - -enable-app-protect=false
            - -enable-app-protect-dos=false
            - -nginx-configmaps=$(POD_NAMESPACE)/nginx-nginx-ingress
            - -ingress-class=nginx
            - -health-status=false
            - -health-status-uri=/nginx-health
            - -nginx-debug=false
            - -v=1
            - -nginx-status=true
            - -nginx-status-port=8080
            - -nginx-status-allow-cidrs=127.0.0.1
            - -report-ingress-status
            - -external-service=nginx-nginx-ingress-controller
            - -enable-leader-election=true
            - -leader-election-lock-name=nginx-ingress-leader
            - -enable-prometheus-metrics=true
            - -prometheus-metrics-listen-port=9113
            - -prometheus-tls-secret=
            - -enable-service-insight=false
            - -service-insight-listen-port=9114
            - -service-insight-tls-secret=
            - -enable-custom-resources=true
            - -enable-snippets=false
            - -include-year=false
            - -disable-ipv6=false
            - -enable-tls-passthrough=false
            - -enable-cert-manager=false
            - -enable-oidc=false
            - -enable-external-dns=false
            - -default-http-listener-port=80
            - -default-https-listener-port=443
            - -ready-status=true
            - -ready-status-port=8081
            - -enable-latency-metrics=false
            - -ssl-dynamic-reload=true
